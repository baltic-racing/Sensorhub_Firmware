
ATmega16_Wheelspeed.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a0e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  00000a0e  00000aa2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000007e  00800062  00800062  00000aa4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000aa4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000ad4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00000b10  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a8f  00000000  00000000  00000bd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007d5  00000000  00000000  00001667  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005d9  00000000  00000000  00001e3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c4  00000000  00000000  00002418  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004d8  00000000  00000000  000025dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000208  00000000  00000000  00002ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00002cbc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__vector_1>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 93 02 	jmp	0x526	; 0x526 <__vector_10>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 60 02 	jmp	0x4c0	; 0x4c0 <__vector_19>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e0       	ldi	r30, 0x0E	; 14
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 36       	cpi	r26, 0x62	; 98
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a2 e6       	ldi	r26, 0x62	; 98
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 3e       	cpi	r26, 0xE0	; 224
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 ae 01 	call	0x35c	; 0x35c <main>
  8a:	0c 94 05 05 	jmp	0xa0a	; 0xa0a <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <calc_wheelspeed_floating>:
	// Konfiguriere INT0 für fallende Flanke
	MCUCR |= (1 << ISC01);				// MCUCR = SMCU Control_Reg
	MCUCR &= ~(1 << ISC00);
	
	// Aktiviere INT0
	GICR |= (1 << INT0);
  92:	cf 92       	push	r12
  94:	df 92       	push	r13
  96:	ef 92       	push	r14
  98:	ff 92       	push	r15
  9a:	1f 93       	push	r17
  9c:	cf 93       	push	r28
  9e:	df 93       	push	r29
  a0:	60 91 66 00 	lds	r22, 0x0066	; 0x800066 <RPS>
  a4:	70 91 67 00 	lds	r23, 0x0067	; 0x800067 <RPS+0x1>
  a8:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <RPS+0x2>
  ac:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <RPS+0x3>
  b0:	20 e0       	ldi	r18, 0x00	; 0
  b2:	30 e0       	ldi	r19, 0x00	; 0
  b4:	44 eb       	ldi	r20, 0xB4	; 180
  b6:	53 e4       	ldi	r21, 0x43	; 67
  b8:	0e 94 76 04 	call	0x8ec	; 0x8ec <__mulsf3>
  bc:	20 e0       	ldi	r18, 0x00	; 0
  be:	30 e0       	ldi	r19, 0x00	; 0
  c0:	48 ec       	ldi	r20, 0xC8	; 200
  c2:	52 e4       	ldi	r21, 0x42	; 66
  c4:	0e 94 23 03 	call	0x646	; 0x646 <__divsf3>
  c8:	60 93 6e 00 	sts	0x006E, r22	; 0x80006e <ideal_measurement_angle>
  cc:	70 93 6f 00 	sts	0x006F, r23	; 0x80006f <ideal_measurement_angle+0x1>
  d0:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <ideal_measurement_angle+0x2>
  d4:	90 93 71 00 	sts	0x0071, r25	; 0x800071 <ideal_measurement_angle+0x3>
  d8:	20 e0       	ldi	r18, 0x00	; 0
  da:	30 e0       	ldi	r19, 0x00	; 0
  dc:	44 e3       	ldi	r20, 0x34	; 52
  de:	51 e4       	ldi	r21, 0x41	; 65
  e0:	0e 94 23 03 	call	0x646	; 0x646 <__divsf3>
  e4:	0e 94 95 03 	call	0x72a	; 0x72a <__fixunssfsi>
  e8:	16 2f       	mov	r17, r22
  ea:	60 93 9c 00 	sts	0x009C, r22	; 0x80009c <interval_width>
  ee:	c6 2f       	mov	r28, r22
  f0:	d0 e0       	ldi	r29, 0x00	; 0
  f2:	be 01       	movw	r22, r28
  f4:	0d 2e       	mov	r0, r29
  f6:	00 0c       	add	r0, r0
  f8:	88 0b       	sbc	r24, r24
  fa:	99 0b       	sbc	r25, r25
  fc:	0e 94 c6 03 	call	0x78c	; 0x78c <__floatsisf>
 100:	6b 01       	movw	r12, r22
 102:	7c 01       	movw	r14, r24
 104:	20 e0       	ldi	r18, 0x00	; 0
 106:	30 e0       	ldi	r19, 0x00	; 0
 108:	44 e3       	ldi	r20, 0x34	; 52
 10a:	51 e4       	ldi	r21, 0x41	; 65
 10c:	0e 94 76 04 	call	0x8ec	; 0x8ec <__mulsf3>
 110:	60 93 6a 00 	sts	0x006A, r22	; 0x80006a <possible_measurement_angle>
 114:	70 93 6b 00 	sts	0x006B, r23	; 0x80006b <possible_measurement_angle+0x1>
 118:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <possible_measurement_angle+0x2>
 11c:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <possible_measurement_angle+0x3>
 120:	20 e0       	ldi	r18, 0x00	; 0
 122:	30 e0       	ldi	r19, 0x00	; 0
 124:	a9 01       	movw	r20, r18
 126:	0e 94 1e 03 	call	0x63c	; 0x63c <__cmpsf2>
 12a:	81 11       	cpse	r24, r1
 12c:	2e c0       	rjmp	.+92     	; 0x18a <calc_wheelspeed_floating+0xf8>
 12e:	80 e0       	ldi	r24, 0x00	; 0
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	a4 e3       	ldi	r26, 0x34	; 52
 134:	b1 e4       	ldi	r27, 0x41	; 65
 136:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <possible_measurement_angle>
 13a:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <possible_measurement_angle+0x1>
 13e:	a0 93 6c 00 	sts	0x006C, r26	; 0x80006c <possible_measurement_angle+0x2>
 142:	b0 93 6d 00 	sts	0x006D, r27	; 0x80006d <possible_measurement_angle+0x3>
 146:	21 c0       	rjmp	.+66     	; 0x18a <calc_wheelspeed_floating+0xf8>
 148:	fe 01       	movw	r30, r28
 14a:	ee 0f       	add	r30, r30
 14c:	ff 1f       	adc	r31, r31
 14e:	ee 0f       	add	r30, r30
 150:	ff 1f       	adc	r31, r31
 152:	ee 58       	subi	r30, 0x8E	; 142
 154:	ff 4f       	sbci	r31, 0xFF	; 255
 156:	60 81       	ld	r22, Z
 158:	71 81       	ldd	r23, Z+1	; 0x01
 15a:	82 81       	ldd	r24, Z+2	; 0x02
 15c:	93 81       	ldd	r25, Z+3	; 0x03
 15e:	0e 94 c4 03 	call	0x788	; 0x788 <__floatunsisf>
 162:	9b 01       	movw	r18, r22
 164:	ac 01       	movw	r20, r24
 166:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <__data_end>
 16a:	70 91 63 00 	lds	r23, 0x0063	; 0x800063 <__data_end+0x1>
 16e:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__data_end+0x2>
 172:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__data_end+0x3>
 176:	0e 94 b2 02 	call	0x564	; 0x564 <__addsf3>
 17a:	60 93 62 00 	sts	0x0062, r22	; 0x800062 <__data_end>
 17e:	70 93 63 00 	sts	0x0063, r23	; 0x800063 <__data_end+0x1>
 182:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__data_end+0x2>
 186:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <__data_end+0x3>
 18a:	12 30       	cpi	r17, 0x02	; 2
 18c:	e8 f2       	brcs	.-70     	; 0x148 <calc_wheelspeed_floating+0xb6>
 18e:	a7 01       	movw	r20, r14
 190:	96 01       	movw	r18, r12
 192:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <__data_end>
 196:	70 91 63 00 	lds	r23, 0x0063	; 0x800063 <__data_end+0x1>
 19a:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__data_end+0x2>
 19e:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__data_end+0x3>
 1a2:	0e 94 23 03 	call	0x646	; 0x646 <__divsf3>
 1a6:	20 e0       	ldi	r18, 0x00	; 0
 1a8:	30 e0       	ldi	r19, 0x00	; 0
 1aa:	a9 01       	movw	r20, r18
 1ac:	0e 94 76 04 	call	0x8ec	; 0x8ec <__mulsf3>
 1b0:	9b 01       	movw	r18, r22
 1b2:	ac 01       	movw	r20, r24
 1b4:	60 e0       	ldi	r22, 0x00	; 0
 1b6:	70 e0       	ldi	r23, 0x00	; 0
 1b8:	80 e8       	ldi	r24, 0x80	; 128
 1ba:	9f e3       	ldi	r25, 0x3F	; 63
 1bc:	0e 94 23 03 	call	0x646	; 0x646 <__divsf3>
 1c0:	60 93 66 00 	sts	0x0066, r22	; 0x800066 <RPS>
 1c4:	70 93 67 00 	sts	0x0067, r23	; 0x800067 <RPS+0x1>
 1c8:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <RPS+0x2>
 1cc:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <RPS+0x3>
 1d0:	60 91 66 00 	lds	r22, 0x0066	; 0x800066 <RPS>
 1d4:	70 91 67 00 	lds	r23, 0x0067	; 0x800067 <RPS+0x1>
 1d8:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <RPS+0x2>
 1dc:	90 91 69 00 	lds	r25, 0x0069	; 0x800069 <RPS+0x3>
 1e0:	29 ed       	ldi	r18, 0xD9	; 217
 1e2:	3c e4       	ldi	r19, 0x4C	; 76
 1e4:	42 eb       	ldi	r20, 0xB2	; 178
 1e6:	5d e3       	ldi	r21, 0x3D	; 61
 1e8:	0e 94 76 04 	call	0x8ec	; 0x8ec <__mulsf3>
 1ec:	20 e0       	ldi	r18, 0x00	; 0
 1ee:	30 e0       	ldi	r19, 0x00	; 0
 1f0:	41 e6       	ldi	r20, 0x61	; 97
 1f2:	55 e4       	ldi	r21, 0x45	; 69
 1f4:	0e 94 76 04 	call	0x8ec	; 0x8ec <__mulsf3>
 1f8:	0e 94 95 03 	call	0x72a	; 0x72a <__fixunssfsi>
 1fc:	60 93 9a 00 	sts	0x009A, r22	; 0x80009a <Wheelspeed>
 200:	70 93 9b 00 	sts	0x009B, r23	; 0x80009b <Wheelspeed+0x1>
 204:	ee ed       	ldi	r30, 0xDE	; 222
 206:	f0 e0       	ldi	r31, 0x00	; 0
 208:	10 82       	st	Z, r1
 20a:	61 83       	std	Z+1, r22	; 0x01
 20c:	df 91       	pop	r29
 20e:	cf 91       	pop	r28
 210:	1f 91       	pop	r17
 212:	ff 90       	pop	r15
 214:	ef 90       	pop	r14
 216:	df 90       	pop	r13
 218:	cf 90       	pop	r12
 21a:	08 95       	ret

0000021c <__vector_1>:
}

ISR(INT0_vect){
 21c:	1f 92       	push	r1
 21e:	0f 92       	push	r0
 220:	0f b6       	in	r0, 0x3f	; 63
 222:	0f 92       	push	r0
 224:	11 24       	eor	r1, r1
 226:	2f 93       	push	r18
 228:	3f 93       	push	r19
 22a:	4f 93       	push	r20
 22c:	5f 93       	push	r21
 22e:	6f 93       	push	r22
 230:	7f 93       	push	r23
 232:	8f 93       	push	r24
 234:	9f 93       	push	r25
 236:	af 93       	push	r26
 238:	bf 93       	push	r27
 23a:	cf 93       	push	r28
 23c:	df 93       	push	r29
 23e:	ef 93       	push	r30
 240:	ff 93       	push	r31
	if(n>=1){
 242:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
 246:	88 23       	and	r24, r24
 248:	09 f4       	brne	.+2      	; 0x24c <__vector_1+0x30>
 24a:	57 c0       	rjmp	.+174    	; 0x2fa <__vector_1+0xde>
		timestepdiff[n] = sys_time - sys_time_old;
 24c:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__data_start>
 250:	f0 e0       	ldi	r31, 0x00	; 0
 252:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <sys_time>
 256:	90 91 da 00 	lds	r25, 0x00DA	; 0x8000da <sys_time+0x1>
 25a:	a0 91 db 00 	lds	r26, 0x00DB	; 0x8000db <sys_time+0x2>
 25e:	b0 91 dc 00 	lds	r27, 0x00DC	; 0x8000dc <sys_time+0x3>
 262:	40 91 c5 00 	lds	r20, 0x00C5	; 0x8000c5 <sys_time_old>
 266:	50 91 c6 00 	lds	r21, 0x00C6	; 0x8000c6 <sys_time_old+0x1>
 26a:	60 91 c7 00 	lds	r22, 0x00C7	; 0x8000c7 <sys_time_old+0x2>
 26e:	70 91 c8 00 	lds	r23, 0x00C8	; 0x8000c8 <sys_time_old+0x3>
 272:	84 1b       	sub	r24, r20
 274:	95 0b       	sbc	r25, r21
 276:	a6 0b       	sbc	r26, r22
 278:	b7 0b       	sbc	r27, r23
 27a:	ee 0f       	add	r30, r30
 27c:	ff 1f       	adc	r31, r31
 27e:	ee 0f       	add	r30, r30
 280:	ff 1f       	adc	r31, r31
 282:	e3 56       	subi	r30, 0x63	; 99
 284:	ff 4f       	sbci	r31, 0xFF	; 255
 286:	80 83       	st	Z, r24
 288:	91 83       	std	Z+1, r25	; 0x01
 28a:	a2 83       	std	Z+2, r26	; 0x02
 28c:	b3 83       	std	Z+3, r27	; 0x03
		timediff[n] = timestepdiff[n] / 10; //timediff according to 10Khz clock so we divide timesteps by 10 to get timediff in ms
 28e:	c0 91 60 00 	lds	r28, 0x0060	; 0x800060 <__data_start>
 292:	d0 e0       	ldi	r29, 0x00	; 0
 294:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__data_start>
 298:	f0 e0       	ldi	r31, 0x00	; 0
 29a:	ee 0f       	add	r30, r30
 29c:	ff 1f       	adc	r31, r31
 29e:	ee 0f       	add	r30, r30
 2a0:	ff 1f       	adc	r31, r31
 2a2:	e3 56       	subi	r30, 0x63	; 99
 2a4:	ff 4f       	sbci	r31, 0xFF	; 255
 2a6:	60 81       	ld	r22, Z
 2a8:	71 81       	ldd	r23, Z+1	; 0x01
 2aa:	82 81       	ldd	r24, Z+2	; 0x02
 2ac:	93 81       	ldd	r25, Z+3	; 0x03
 2ae:	2a e0       	ldi	r18, 0x0A	; 10
 2b0:	30 e0       	ldi	r19, 0x00	; 0
 2b2:	40 e0       	ldi	r20, 0x00	; 0
 2b4:	50 e0       	ldi	r21, 0x00	; 0
 2b6:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <__udivmodsi4>
 2ba:	cc 0f       	add	r28, r28
 2bc:	dd 1f       	adc	r29, r29
 2be:	cc 0f       	add	r28, r28
 2c0:	dd 1f       	adc	r29, r29
 2c2:	ce 58       	subi	r28, 0x8E	; 142
 2c4:	df 4f       	sbci	r29, 0xFF	; 255
 2c6:	28 83       	st	Y, r18
 2c8:	39 83       	std	Y+1, r19	; 0x01
 2ca:	4a 83       	std	Y+2, r20	; 0x02
 2cc:	5b 83       	std	Y+3, r21	; 0x03
		sys_time_old = sys_time;
 2ce:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <sys_time>
 2d2:	90 91 da 00 	lds	r25, 0x00DA	; 0x8000da <sys_time+0x1>
 2d6:	a0 91 db 00 	lds	r26, 0x00DB	; 0x8000db <sys_time+0x2>
 2da:	b0 91 dc 00 	lds	r27, 0x00DC	; 0x8000dc <sys_time+0x3>
 2de:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <sys_time_old>
 2e2:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <sys_time_old+0x1>
 2e6:	a0 93 c7 00 	sts	0x00C7, r26	; 0x8000c7 <sys_time_old+0x2>
 2ea:	b0 93 c8 00 	sts	0x00C8, r27	; 0x8000c8 <sys_time_old+0x3>
		n--;
 2ee:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
 2f2:	81 50       	subi	r24, 0x01	; 1
 2f4:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__data_start>
 2f8:	1c c0       	rjmp	.+56     	; 0x332 <__vector_1+0x116>
		for (uint8_t i= 9; i <= 1;)
		{
			timestepdiff[i]=timestepdiff[i+1];
			i--;
		}
		timestepdiff[0] = sys_time - sys_time_old; //Timer overflow? Timer Resolution in contrast to angular speed
 2fa:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <sys_time>
 2fe:	90 91 da 00 	lds	r25, 0x00DA	; 0x8000da <sys_time+0x1>
 302:	a0 91 db 00 	lds	r26, 0x00DB	; 0x8000db <sys_time+0x2>
 306:	b0 91 dc 00 	lds	r27, 0x00DC	; 0x8000dc <sys_time+0x3>
 30a:	40 91 c5 00 	lds	r20, 0x00C5	; 0x8000c5 <sys_time_old>
 30e:	50 91 c6 00 	lds	r21, 0x00C6	; 0x8000c6 <sys_time_old+0x1>
 312:	60 91 c7 00 	lds	r22, 0x00C7	; 0x8000c7 <sys_time_old+0x2>
 316:	70 91 c8 00 	lds	r23, 0x00C8	; 0x8000c8 <sys_time_old+0x3>
 31a:	84 1b       	sub	r24, r20
 31c:	95 0b       	sbc	r25, r21
 31e:	a6 0b       	sbc	r26, r22
 320:	b7 0b       	sbc	r27, r23
 322:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <timestepdiff>
 326:	90 93 9e 00 	sts	0x009E, r25	; 0x80009e <timestepdiff+0x1>
 32a:	a0 93 9f 00 	sts	0x009F, r26	; 0x80009f <timestepdiff+0x2>
 32e:	b0 93 a0 00 	sts	0x00A0, r27	; 0x8000a0 <timestepdiff+0x3>
	}
	calc_wheelspeed_floating();
 332:	0e 94 49 00 	call	0x92	; 0x92 <calc_wheelspeed_floating>
 336:	ff 91       	pop	r31
 338:	ef 91       	pop	r30
 33a:	df 91       	pop	r29
 33c:	cf 91       	pop	r28
 33e:	bf 91       	pop	r27
 340:	af 91       	pop	r26
 342:	9f 91       	pop	r25
 344:	8f 91       	pop	r24
 346:	7f 91       	pop	r23
 348:	6f 91       	pop	r22
 34a:	5f 91       	pop	r21
 34c:	4f 91       	pop	r20
 34e:	3f 91       	pop	r19
 350:	2f 91       	pop	r18
 352:	0f 90       	pop	r0
 354:	0f be       	out	0x3f, r0	; 63
 356:	0f 90       	pop	r0
 358:	1f 90       	pop	r1
 35a:	18 95       	reti

0000035c <main>:
#include "main.h"


int main(void)
{
	sys_timer_config();
 35c:	0e 94 58 02 	call	0x4b0	; 0x4b0 <sys_timer_config>
	SPI_SlaveInit();
 360:	0e 94 85 02 	call	0x50a	; 0x50a <SPI_SlaveInit>
	uint8_t data = 0;
	
	sei();
 364:	78 94       	sei
	
    while (1) 
    {
		data = SPI_SlaveReceive();
 366:	0e 94 8f 02 	call	0x51e	; 0x51e <SPI_SlaveReceive>
		
		if(TIME_PASSED_1_MS)
 36a:	40 91 d9 00 	lds	r20, 0x00D9	; 0x8000d9 <sys_time>
 36e:	50 91 da 00 	lds	r21, 0x00DA	; 0x8000da <sys_time+0x1>
 372:	60 91 db 00 	lds	r22, 0x00DB	; 0x8000db <sys_time+0x2>
 376:	70 91 dc 00 	lds	r23, 0x00DC	; 0x8000dc <sys_time+0x3>
 37a:	80 91 d5 00 	lds	r24, 0x00D5	; 0x8000d5 <time_1ms>
 37e:	90 91 d6 00 	lds	r25, 0x00D6	; 0x8000d6 <time_1ms+0x1>
 382:	a0 91 d7 00 	lds	r26, 0x00D7	; 0x8000d7 <time_1ms+0x2>
 386:	b0 91 d8 00 	lds	r27, 0x00D8	; 0x8000d8 <time_1ms+0x3>
 38a:	48 17       	cp	r20, r24
 38c:	59 07       	cpc	r21, r25
 38e:	6a 07       	cpc	r22, r26
 390:	7b 07       	cpc	r23, r27
 392:	91 f0       	breq	.+36     	; 0x3b8 <main+0x5c>
		{
			time_1ms = sys_time;
 394:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <sys_time>
 398:	90 91 da 00 	lds	r25, 0x00DA	; 0x8000da <sys_time+0x1>
 39c:	a0 91 db 00 	lds	r26, 0x00DB	; 0x8000db <sys_time+0x2>
 3a0:	b0 91 dc 00 	lds	r27, 0x00DC	; 0x8000dc <sys_time+0x3>
 3a4:	80 93 d5 00 	sts	0x00D5, r24	; 0x8000d5 <time_1ms>
 3a8:	90 93 d6 00 	sts	0x00D6, r25	; 0x8000d6 <time_1ms+0x1>
 3ac:	a0 93 d7 00 	sts	0x00D7, r26	; 0x8000d7 <time_1ms+0x2>
 3b0:	b0 93 d8 00 	sts	0x00D8, r27	; 0x8000d8 <time_1ms+0x3>
			calc_wheelspeed_floating();
 3b4:	0e 94 49 00 	call	0x92	; 0x92 <calc_wheelspeed_floating>
		} // end of 1ms
		
		if(TIME_PASSED_10_MS)
 3b8:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <sys_time>
 3bc:	90 91 da 00 	lds	r25, 0x00DA	; 0x8000da <sys_time+0x1>
 3c0:	a0 91 db 00 	lds	r26, 0x00DB	; 0x8000db <sys_time+0x2>
 3c4:	b0 91 dc 00 	lds	r27, 0x00DC	; 0x8000dc <sys_time+0x3>
 3c8:	40 91 d1 00 	lds	r20, 0x00D1	; 0x8000d1 <time_10ms>
 3cc:	50 91 d2 00 	lds	r21, 0x00D2	; 0x8000d2 <time_10ms+0x1>
 3d0:	60 91 d3 00 	lds	r22, 0x00D3	; 0x8000d3 <time_10ms+0x2>
 3d4:	70 91 d4 00 	lds	r23, 0x00D4	; 0x8000d4 <time_10ms+0x3>
 3d8:	84 1b       	sub	r24, r20
 3da:	95 0b       	sbc	r25, r21
 3dc:	a6 0b       	sbc	r26, r22
 3de:	b7 0b       	sbc	r27, r23
 3e0:	0a 97       	sbiw	r24, 0x0a	; 10
 3e2:	a1 05       	cpc	r26, r1
 3e4:	b1 05       	cpc	r27, r1
 3e6:	80 f0       	brcs	.+32     	; 0x408 <__DATA_REGION_LENGTH__+0x8>
		{
			time_10ms = sys_time;
 3e8:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <sys_time>
 3ec:	90 91 da 00 	lds	r25, 0x00DA	; 0x8000da <sys_time+0x1>
 3f0:	a0 91 db 00 	lds	r26, 0x00DB	; 0x8000db <sys_time+0x2>
 3f4:	b0 91 dc 00 	lds	r27, 0x00DC	; 0x8000dc <sys_time+0x3>
 3f8:	80 93 d1 00 	sts	0x00D1, r24	; 0x8000d1 <time_10ms>
 3fc:	90 93 d2 00 	sts	0x00D2, r25	; 0x8000d2 <time_10ms+0x1>
 400:	a0 93 d3 00 	sts	0x00D3, r26	; 0x8000d3 <time_10ms+0x2>
 404:	b0 93 d4 00 	sts	0x00D4, r27	; 0x8000d4 <time_10ms+0x3>
			
			
		} // end of 10ms

		if (TIME_PASSED_100_MS)
 408:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <sys_time>
 40c:	90 91 da 00 	lds	r25, 0x00DA	; 0x8000da <sys_time+0x1>
 410:	a0 91 db 00 	lds	r26, 0x00DB	; 0x8000db <sys_time+0x2>
 414:	b0 91 dc 00 	lds	r27, 0x00DC	; 0x8000dc <sys_time+0x3>
 418:	40 91 cd 00 	lds	r20, 0x00CD	; 0x8000cd <time_100ms>
 41c:	50 91 ce 00 	lds	r21, 0x00CE	; 0x8000ce <time_100ms+0x1>
 420:	60 91 cf 00 	lds	r22, 0x00CF	; 0x8000cf <time_100ms+0x2>
 424:	70 91 d0 00 	lds	r23, 0x00D0	; 0x8000d0 <time_100ms+0x3>
 428:	84 1b       	sub	r24, r20
 42a:	95 0b       	sbc	r25, r21
 42c:	a6 0b       	sbc	r26, r22
 42e:	b7 0b       	sbc	r27, r23
 430:	84 36       	cpi	r24, 0x64	; 100
 432:	91 05       	cpc	r25, r1
 434:	a1 05       	cpc	r26, r1
 436:	b1 05       	cpc	r27, r1
 438:	80 f0       	brcs	.+32     	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
		{
			time_100ms = sys_time;
 43a:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <sys_time>
 43e:	90 91 da 00 	lds	r25, 0x00DA	; 0x8000da <sys_time+0x1>
 442:	a0 91 db 00 	lds	r26, 0x00DB	; 0x8000db <sys_time+0x2>
 446:	b0 91 dc 00 	lds	r27, 0x00DC	; 0x8000dc <sys_time+0x3>
 44a:	80 93 cd 00 	sts	0x00CD, r24	; 0x8000cd <time_100ms>
 44e:	90 93 ce 00 	sts	0x00CE, r25	; 0x8000ce <time_100ms+0x1>
 452:	a0 93 cf 00 	sts	0x00CF, r26	; 0x8000cf <time_100ms+0x2>
 456:	b0 93 d0 00 	sts	0x00D0, r27	; 0x8000d0 <time_100ms+0x3>
			
			//sys_tick_heart();
			
		} // end of 100ms
		
		if (TIME_PASSED_200_MS)
 45a:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <sys_time>
 45e:	90 91 da 00 	lds	r25, 0x00DA	; 0x8000da <sys_time+0x1>
 462:	a0 91 db 00 	lds	r26, 0x00DB	; 0x8000db <sys_time+0x2>
 466:	b0 91 dc 00 	lds	r27, 0x00DC	; 0x8000dc <sys_time+0x3>
 46a:	40 91 c9 00 	lds	r20, 0x00C9	; 0x8000c9 <time_200ms>
 46e:	50 91 ca 00 	lds	r21, 0x00CA	; 0x8000ca <time_200ms+0x1>
 472:	60 91 cb 00 	lds	r22, 0x00CB	; 0x8000cb <time_200ms+0x2>
 476:	70 91 cc 00 	lds	r23, 0x00CC	; 0x8000cc <time_200ms+0x3>
 47a:	84 1b       	sub	r24, r20
 47c:	95 0b       	sbc	r25, r21
 47e:	a6 0b       	sbc	r26, r22
 480:	b7 0b       	sbc	r27, r23
 482:	88 3c       	cpi	r24, 0xC8	; 200
 484:	91 05       	cpc	r25, r1
 486:	a1 05       	cpc	r26, r1
 488:	b1 05       	cpc	r27, r1
 48a:	08 f4       	brcc	.+2      	; 0x48e <__stack+0x2f>
 48c:	6c cf       	rjmp	.-296    	; 0x366 <main+0xa>
		{
			time_200ms = sys_time;
 48e:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <sys_time>
 492:	90 91 da 00 	lds	r25, 0x00DA	; 0x8000da <sys_time+0x1>
 496:	a0 91 db 00 	lds	r26, 0x00DB	; 0x8000db <sys_time+0x2>
 49a:	b0 91 dc 00 	lds	r27, 0x00DC	; 0x8000dc <sys_time+0x3>
 49e:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <time_200ms>
 4a2:	90 93 ca 00 	sts	0x00CA, r25	; 0x8000ca <time_200ms+0x1>
 4a6:	a0 93 cb 00 	sts	0x00CB, r26	; 0x8000cb <time_200ms+0x2>
 4aa:	b0 93 cc 00 	sts	0x00CC, r27	; 0x8000cc <time_200ms+0x3>
 4ae:	5b cf       	rjmp	.-330    	; 0x366 <main+0xa>

000004b0 <sys_timer_config>:
{
	//PORT_ &= ~(1<<P__); //turn off red led in case of no fault
}

void fault_detected()
{
 4b0:	8b e0       	ldi	r24, 0x0B	; 11
 4b2:	83 bf       	out	0x33, r24	; 51
 4b4:	89 b7       	in	r24, 0x39	; 57
 4b6:	83 60       	ori	r24, 0x03	; 3
 4b8:	89 bf       	out	0x39, r24	; 57
 4ba:	89 ef       	ldi	r24, 0xF9	; 249
 4bc:	8c bf       	out	0x3c, r24	; 60
 4be:	08 95       	ret

000004c0 <__vector_19>:
	//PORT_ |= (1<<P__); //turn on red led when called (fault present)
}

ISR(TIMER0_COMP_vect)
{
 4c0:	1f 92       	push	r1
 4c2:	0f 92       	push	r0
 4c4:	0f b6       	in	r0, 0x3f	; 63
 4c6:	0f 92       	push	r0
 4c8:	11 24       	eor	r1, r1
 4ca:	8f 93       	push	r24
 4cc:	9f 93       	push	r25
 4ce:	af 93       	push	r26
 4d0:	bf 93       	push	r27
	sys_time++;
 4d2:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <sys_time>
 4d6:	90 91 da 00 	lds	r25, 0x00DA	; 0x8000da <sys_time+0x1>
 4da:	a0 91 db 00 	lds	r26, 0x00DB	; 0x8000db <sys_time+0x2>
 4de:	b0 91 dc 00 	lds	r27, 0x00DC	; 0x8000dc <sys_time+0x3>
 4e2:	01 96       	adiw	r24, 0x01	; 1
 4e4:	a1 1d       	adc	r26, r1
 4e6:	b1 1d       	adc	r27, r1
 4e8:	80 93 d9 00 	sts	0x00D9, r24	; 0x8000d9 <sys_time>
 4ec:	90 93 da 00 	sts	0x00DA, r25	; 0x8000da <sys_time+0x1>
 4f0:	a0 93 db 00 	sts	0x00DB, r26	; 0x8000db <sys_time+0x2>
 4f4:	b0 93 dc 00 	sts	0x00DC, r27	; 0x8000dc <sys_time+0x3>
 4f8:	bf 91       	pop	r27
 4fa:	af 91       	pop	r26
 4fc:	9f 91       	pop	r25
 4fe:	8f 91       	pop	r24
 500:	0f 90       	pop	r0
 502:	0f be       	out	0x3f, r0	; 63
 504:	0f 90       	pop	r0
 506:	1f 90       	pop	r1
 508:	18 95       	reti

0000050a <SPI_SlaveInit>:
}

void SPI_SlaveInit()
{
	//Set MOSI, SCK, SS as input
	DDRB &= ~((1<<MOSI) | (1<<SCK) | (1<<SS_uC));
 50a:	87 b3       	in	r24, 0x17	; 23
 50c:	8f 74       	andi	r24, 0x4F	; 79
 50e:	87 bb       	out	0x17, r24	; 23
	
	//Set MISO as output
	DDRB |= (1<<MISO);
 510:	87 b3       	in	r24, 0x17	; 23
 512:	80 64       	ori	r24, 0x40	; 64
 514:	87 bb       	out	0x17, r24	; 23
	
	//enables SPI
	SPI_Control_Reg |= (1<<SPI_Enable);
 516:	8d b1       	in	r24, 0x0d	; 13
 518:	80 64       	ori	r24, 0x40	; 64
 51a:	8d b9       	out	0x0d, r24	; 13
 51c:	08 95       	ret

0000051e <SPI_SlaveReceive>:
}

char SPI_SlaveReceive()
{
	/* Wait for reception complete */
	while(!(SPI_Status_Reg & (1<<SPI_Interrupft_Flag)));
 51e:	77 9b       	sbis	0x0e, 7	; 14
 520:	fe cf       	rjmp	.-4      	; 0x51e <SPI_SlaveReceive>
	/* Return data register */
	return SPI_Data_Reg;
 522:	8f b1       	in	r24, 0x0f	; 15
}
 524:	08 95       	ret

00000526 <__vector_10>:

ISR(SPI_STC_vect)
{
 526:	1f 92       	push	r1
 528:	0f 92       	push	r0
 52a:	0f b6       	in	r0, 0x3f	; 63
 52c:	0f 92       	push	r0
 52e:	11 24       	eor	r1, r1
 530:	8f 93       	push	r24
	if(k==0)
 532:	80 91 dd 00 	lds	r24, 0x00DD	; 0x8000dd <k>
 536:	81 11       	cpse	r24, r1
 538:	09 c0       	rjmp	.+18     	; 0x54c <__vector_10+0x26>
	{
		SPI_Data_Reg = spi_data[0];
 53a:	80 91 de 00 	lds	r24, 0x00DE	; 0x8000de <spi_data>
 53e:	8f b9       	out	0x0f, r24	; 15
		k++;
 540:	80 91 dd 00 	lds	r24, 0x00DD	; 0x8000dd <k>
 544:	8f 5f       	subi	r24, 0xFF	; 255
 546:	80 93 dd 00 	sts	0x00DD, r24	; 0x8000dd <k>
 54a:	05 c0       	rjmp	.+10     	; 0x556 <__vector_10+0x30>
	}
	else
	{
		SPI_Data_Reg = spi_data[1];
 54c:	80 91 df 00 	lds	r24, 0x00DF	; 0x8000df <spi_data+0x1>
 550:	8f b9       	out	0x0f, r24	; 15
		k=0;
 552:	10 92 dd 00 	sts	0x00DD, r1	; 0x8000dd <k>
	}
 556:	8f 91       	pop	r24
 558:	0f 90       	pop	r0
 55a:	0f be       	out	0x3f, r0	; 63
 55c:	0f 90       	pop	r0
 55e:	1f 90       	pop	r1
 560:	18 95       	reti

00000562 <__subsf3>:
 562:	50 58       	subi	r21, 0x80	; 128

00000564 <__addsf3>:
 564:	bb 27       	eor	r27, r27
 566:	aa 27       	eor	r26, r26
 568:	0e 94 c9 02 	call	0x592	; 0x592 <__addsf3x>
 56c:	0c 94 3c 04 	jmp	0x878	; 0x878 <__fp_round>
 570:	0e 94 2e 04 	call	0x85c	; 0x85c <__fp_pscA>
 574:	38 f0       	brcs	.+14     	; 0x584 <__addsf3+0x20>
 576:	0e 94 35 04 	call	0x86a	; 0x86a <__fp_pscB>
 57a:	20 f0       	brcs	.+8      	; 0x584 <__addsf3+0x20>
 57c:	39 f4       	brne	.+14     	; 0x58c <__addsf3+0x28>
 57e:	9f 3f       	cpi	r25, 0xFF	; 255
 580:	19 f4       	brne	.+6      	; 0x588 <__addsf3+0x24>
 582:	26 f4       	brtc	.+8      	; 0x58c <__addsf3+0x28>
 584:	0c 94 2b 04 	jmp	0x856	; 0x856 <__fp_nan>
 588:	0e f4       	brtc	.+2      	; 0x58c <__addsf3+0x28>
 58a:	e0 95       	com	r30
 58c:	e7 fb       	bst	r30, 7
 58e:	0c 94 25 04 	jmp	0x84a	; 0x84a <__fp_inf>

00000592 <__addsf3x>:
 592:	e9 2f       	mov	r30, r25
 594:	0e 94 4d 04 	call	0x89a	; 0x89a <__fp_split3>
 598:	58 f3       	brcs	.-42     	; 0x570 <__addsf3+0xc>
 59a:	ba 17       	cp	r27, r26
 59c:	62 07       	cpc	r22, r18
 59e:	73 07       	cpc	r23, r19
 5a0:	84 07       	cpc	r24, r20
 5a2:	95 07       	cpc	r25, r21
 5a4:	20 f0       	brcs	.+8      	; 0x5ae <__addsf3x+0x1c>
 5a6:	79 f4       	brne	.+30     	; 0x5c6 <__addsf3x+0x34>
 5a8:	a6 f5       	brtc	.+104    	; 0x612 <__addsf3x+0x80>
 5aa:	0c 94 6f 04 	jmp	0x8de	; 0x8de <__fp_zero>
 5ae:	0e f4       	brtc	.+2      	; 0x5b2 <__addsf3x+0x20>
 5b0:	e0 95       	com	r30
 5b2:	0b 2e       	mov	r0, r27
 5b4:	ba 2f       	mov	r27, r26
 5b6:	a0 2d       	mov	r26, r0
 5b8:	0b 01       	movw	r0, r22
 5ba:	b9 01       	movw	r22, r18
 5bc:	90 01       	movw	r18, r0
 5be:	0c 01       	movw	r0, r24
 5c0:	ca 01       	movw	r24, r20
 5c2:	a0 01       	movw	r20, r0
 5c4:	11 24       	eor	r1, r1
 5c6:	ff 27       	eor	r31, r31
 5c8:	59 1b       	sub	r21, r25
 5ca:	99 f0       	breq	.+38     	; 0x5f2 <__addsf3x+0x60>
 5cc:	59 3f       	cpi	r21, 0xF9	; 249
 5ce:	50 f4       	brcc	.+20     	; 0x5e4 <__addsf3x+0x52>
 5d0:	50 3e       	cpi	r21, 0xE0	; 224
 5d2:	68 f1       	brcs	.+90     	; 0x62e <__addsf3x+0x9c>
 5d4:	1a 16       	cp	r1, r26
 5d6:	f0 40       	sbci	r31, 0x00	; 0
 5d8:	a2 2f       	mov	r26, r18
 5da:	23 2f       	mov	r18, r19
 5dc:	34 2f       	mov	r19, r20
 5de:	44 27       	eor	r20, r20
 5e0:	58 5f       	subi	r21, 0xF8	; 248
 5e2:	f3 cf       	rjmp	.-26     	; 0x5ca <__addsf3x+0x38>
 5e4:	46 95       	lsr	r20
 5e6:	37 95       	ror	r19
 5e8:	27 95       	ror	r18
 5ea:	a7 95       	ror	r26
 5ec:	f0 40       	sbci	r31, 0x00	; 0
 5ee:	53 95       	inc	r21
 5f0:	c9 f7       	brne	.-14     	; 0x5e4 <__addsf3x+0x52>
 5f2:	7e f4       	brtc	.+30     	; 0x612 <__addsf3x+0x80>
 5f4:	1f 16       	cp	r1, r31
 5f6:	ba 0b       	sbc	r27, r26
 5f8:	62 0b       	sbc	r22, r18
 5fa:	73 0b       	sbc	r23, r19
 5fc:	84 0b       	sbc	r24, r20
 5fe:	ba f0       	brmi	.+46     	; 0x62e <__addsf3x+0x9c>
 600:	91 50       	subi	r25, 0x01	; 1
 602:	a1 f0       	breq	.+40     	; 0x62c <__addsf3x+0x9a>
 604:	ff 0f       	add	r31, r31
 606:	bb 1f       	adc	r27, r27
 608:	66 1f       	adc	r22, r22
 60a:	77 1f       	adc	r23, r23
 60c:	88 1f       	adc	r24, r24
 60e:	c2 f7       	brpl	.-16     	; 0x600 <__addsf3x+0x6e>
 610:	0e c0       	rjmp	.+28     	; 0x62e <__addsf3x+0x9c>
 612:	ba 0f       	add	r27, r26
 614:	62 1f       	adc	r22, r18
 616:	73 1f       	adc	r23, r19
 618:	84 1f       	adc	r24, r20
 61a:	48 f4       	brcc	.+18     	; 0x62e <__addsf3x+0x9c>
 61c:	87 95       	ror	r24
 61e:	77 95       	ror	r23
 620:	67 95       	ror	r22
 622:	b7 95       	ror	r27
 624:	f7 95       	ror	r31
 626:	9e 3f       	cpi	r25, 0xFE	; 254
 628:	08 f0       	brcs	.+2      	; 0x62c <__addsf3x+0x9a>
 62a:	b0 cf       	rjmp	.-160    	; 0x58c <__addsf3+0x28>
 62c:	93 95       	inc	r25
 62e:	88 0f       	add	r24, r24
 630:	08 f0       	brcs	.+2      	; 0x634 <__addsf3x+0xa2>
 632:	99 27       	eor	r25, r25
 634:	ee 0f       	add	r30, r30
 636:	97 95       	ror	r25
 638:	87 95       	ror	r24
 63a:	08 95       	ret

0000063c <__cmpsf2>:
 63c:	0e 94 01 04 	call	0x802	; 0x802 <__fp_cmp>
 640:	08 f4       	brcc	.+2      	; 0x644 <__cmpsf2+0x8>
 642:	81 e0       	ldi	r24, 0x01	; 1
 644:	08 95       	ret

00000646 <__divsf3>:
 646:	0e 94 37 03 	call	0x66e	; 0x66e <__divsf3x>
 64a:	0c 94 3c 04 	jmp	0x878	; 0x878 <__fp_round>
 64e:	0e 94 35 04 	call	0x86a	; 0x86a <__fp_pscB>
 652:	58 f0       	brcs	.+22     	; 0x66a <__divsf3+0x24>
 654:	0e 94 2e 04 	call	0x85c	; 0x85c <__fp_pscA>
 658:	40 f0       	brcs	.+16     	; 0x66a <__divsf3+0x24>
 65a:	29 f4       	brne	.+10     	; 0x666 <__divsf3+0x20>
 65c:	5f 3f       	cpi	r21, 0xFF	; 255
 65e:	29 f0       	breq	.+10     	; 0x66a <__divsf3+0x24>
 660:	0c 94 25 04 	jmp	0x84a	; 0x84a <__fp_inf>
 664:	51 11       	cpse	r21, r1
 666:	0c 94 70 04 	jmp	0x8e0	; 0x8e0 <__fp_szero>
 66a:	0c 94 2b 04 	jmp	0x856	; 0x856 <__fp_nan>

0000066e <__divsf3x>:
 66e:	0e 94 4d 04 	call	0x89a	; 0x89a <__fp_split3>
 672:	68 f3       	brcs	.-38     	; 0x64e <__divsf3+0x8>

00000674 <__divsf3_pse>:
 674:	99 23       	and	r25, r25
 676:	b1 f3       	breq	.-20     	; 0x664 <__divsf3+0x1e>
 678:	55 23       	and	r21, r21
 67a:	91 f3       	breq	.-28     	; 0x660 <__divsf3+0x1a>
 67c:	95 1b       	sub	r25, r21
 67e:	55 0b       	sbc	r21, r21
 680:	bb 27       	eor	r27, r27
 682:	aa 27       	eor	r26, r26
 684:	62 17       	cp	r22, r18
 686:	73 07       	cpc	r23, r19
 688:	84 07       	cpc	r24, r20
 68a:	38 f0       	brcs	.+14     	; 0x69a <__divsf3_pse+0x26>
 68c:	9f 5f       	subi	r25, 0xFF	; 255
 68e:	5f 4f       	sbci	r21, 0xFF	; 255
 690:	22 0f       	add	r18, r18
 692:	33 1f       	adc	r19, r19
 694:	44 1f       	adc	r20, r20
 696:	aa 1f       	adc	r26, r26
 698:	a9 f3       	breq	.-22     	; 0x684 <__divsf3_pse+0x10>
 69a:	35 d0       	rcall	.+106    	; 0x706 <__divsf3_pse+0x92>
 69c:	0e 2e       	mov	r0, r30
 69e:	3a f0       	brmi	.+14     	; 0x6ae <__divsf3_pse+0x3a>
 6a0:	e0 e8       	ldi	r30, 0x80	; 128
 6a2:	32 d0       	rcall	.+100    	; 0x708 <__divsf3_pse+0x94>
 6a4:	91 50       	subi	r25, 0x01	; 1
 6a6:	50 40       	sbci	r21, 0x00	; 0
 6a8:	e6 95       	lsr	r30
 6aa:	00 1c       	adc	r0, r0
 6ac:	ca f7       	brpl	.-14     	; 0x6a0 <__divsf3_pse+0x2c>
 6ae:	2b d0       	rcall	.+86     	; 0x706 <__divsf3_pse+0x92>
 6b0:	fe 2f       	mov	r31, r30
 6b2:	29 d0       	rcall	.+82     	; 0x706 <__divsf3_pse+0x92>
 6b4:	66 0f       	add	r22, r22
 6b6:	77 1f       	adc	r23, r23
 6b8:	88 1f       	adc	r24, r24
 6ba:	bb 1f       	adc	r27, r27
 6bc:	26 17       	cp	r18, r22
 6be:	37 07       	cpc	r19, r23
 6c0:	48 07       	cpc	r20, r24
 6c2:	ab 07       	cpc	r26, r27
 6c4:	b0 e8       	ldi	r27, 0x80	; 128
 6c6:	09 f0       	breq	.+2      	; 0x6ca <__divsf3_pse+0x56>
 6c8:	bb 0b       	sbc	r27, r27
 6ca:	80 2d       	mov	r24, r0
 6cc:	bf 01       	movw	r22, r30
 6ce:	ff 27       	eor	r31, r31
 6d0:	93 58       	subi	r25, 0x83	; 131
 6d2:	5f 4f       	sbci	r21, 0xFF	; 255
 6d4:	3a f0       	brmi	.+14     	; 0x6e4 <__divsf3_pse+0x70>
 6d6:	9e 3f       	cpi	r25, 0xFE	; 254
 6d8:	51 05       	cpc	r21, r1
 6da:	78 f0       	brcs	.+30     	; 0x6fa <__divsf3_pse+0x86>
 6dc:	0c 94 25 04 	jmp	0x84a	; 0x84a <__fp_inf>
 6e0:	0c 94 70 04 	jmp	0x8e0	; 0x8e0 <__fp_szero>
 6e4:	5f 3f       	cpi	r21, 0xFF	; 255
 6e6:	e4 f3       	brlt	.-8      	; 0x6e0 <__divsf3_pse+0x6c>
 6e8:	98 3e       	cpi	r25, 0xE8	; 232
 6ea:	d4 f3       	brlt	.-12     	; 0x6e0 <__divsf3_pse+0x6c>
 6ec:	86 95       	lsr	r24
 6ee:	77 95       	ror	r23
 6f0:	67 95       	ror	r22
 6f2:	b7 95       	ror	r27
 6f4:	f7 95       	ror	r31
 6f6:	9f 5f       	subi	r25, 0xFF	; 255
 6f8:	c9 f7       	brne	.-14     	; 0x6ec <__divsf3_pse+0x78>
 6fa:	88 0f       	add	r24, r24
 6fc:	91 1d       	adc	r25, r1
 6fe:	96 95       	lsr	r25
 700:	87 95       	ror	r24
 702:	97 f9       	bld	r25, 7
 704:	08 95       	ret
 706:	e1 e0       	ldi	r30, 0x01	; 1
 708:	66 0f       	add	r22, r22
 70a:	77 1f       	adc	r23, r23
 70c:	88 1f       	adc	r24, r24
 70e:	bb 1f       	adc	r27, r27
 710:	62 17       	cp	r22, r18
 712:	73 07       	cpc	r23, r19
 714:	84 07       	cpc	r24, r20
 716:	ba 07       	cpc	r27, r26
 718:	20 f0       	brcs	.+8      	; 0x722 <__divsf3_pse+0xae>
 71a:	62 1b       	sub	r22, r18
 71c:	73 0b       	sbc	r23, r19
 71e:	84 0b       	sbc	r24, r20
 720:	ba 0b       	sbc	r27, r26
 722:	ee 1f       	adc	r30, r30
 724:	88 f7       	brcc	.-30     	; 0x708 <__divsf3_pse+0x94>
 726:	e0 95       	com	r30
 728:	08 95       	ret

0000072a <__fixunssfsi>:
 72a:	0e 94 55 04 	call	0x8aa	; 0x8aa <__fp_splitA>
 72e:	88 f0       	brcs	.+34     	; 0x752 <__fixunssfsi+0x28>
 730:	9f 57       	subi	r25, 0x7F	; 127
 732:	98 f0       	brcs	.+38     	; 0x75a <__fixunssfsi+0x30>
 734:	b9 2f       	mov	r27, r25
 736:	99 27       	eor	r25, r25
 738:	b7 51       	subi	r27, 0x17	; 23
 73a:	b0 f0       	brcs	.+44     	; 0x768 <__fixunssfsi+0x3e>
 73c:	e1 f0       	breq	.+56     	; 0x776 <__fixunssfsi+0x4c>
 73e:	66 0f       	add	r22, r22
 740:	77 1f       	adc	r23, r23
 742:	88 1f       	adc	r24, r24
 744:	99 1f       	adc	r25, r25
 746:	1a f0       	brmi	.+6      	; 0x74e <__fixunssfsi+0x24>
 748:	ba 95       	dec	r27
 74a:	c9 f7       	brne	.-14     	; 0x73e <__fixunssfsi+0x14>
 74c:	14 c0       	rjmp	.+40     	; 0x776 <__fixunssfsi+0x4c>
 74e:	b1 30       	cpi	r27, 0x01	; 1
 750:	91 f0       	breq	.+36     	; 0x776 <__fixunssfsi+0x4c>
 752:	0e 94 6f 04 	call	0x8de	; 0x8de <__fp_zero>
 756:	b1 e0       	ldi	r27, 0x01	; 1
 758:	08 95       	ret
 75a:	0c 94 6f 04 	jmp	0x8de	; 0x8de <__fp_zero>
 75e:	67 2f       	mov	r22, r23
 760:	78 2f       	mov	r23, r24
 762:	88 27       	eor	r24, r24
 764:	b8 5f       	subi	r27, 0xF8	; 248
 766:	39 f0       	breq	.+14     	; 0x776 <__fixunssfsi+0x4c>
 768:	b9 3f       	cpi	r27, 0xF9	; 249
 76a:	cc f3       	brlt	.-14     	; 0x75e <__fixunssfsi+0x34>
 76c:	86 95       	lsr	r24
 76e:	77 95       	ror	r23
 770:	67 95       	ror	r22
 772:	b3 95       	inc	r27
 774:	d9 f7       	brne	.-10     	; 0x76c <__fixunssfsi+0x42>
 776:	3e f4       	brtc	.+14     	; 0x786 <__fixunssfsi+0x5c>
 778:	90 95       	com	r25
 77a:	80 95       	com	r24
 77c:	70 95       	com	r23
 77e:	61 95       	neg	r22
 780:	7f 4f       	sbci	r23, 0xFF	; 255
 782:	8f 4f       	sbci	r24, 0xFF	; 255
 784:	9f 4f       	sbci	r25, 0xFF	; 255
 786:	08 95       	ret

00000788 <__floatunsisf>:
 788:	e8 94       	clt
 78a:	09 c0       	rjmp	.+18     	; 0x79e <__floatsisf+0x12>

0000078c <__floatsisf>:
 78c:	97 fb       	bst	r25, 7
 78e:	3e f4       	brtc	.+14     	; 0x79e <__floatsisf+0x12>
 790:	90 95       	com	r25
 792:	80 95       	com	r24
 794:	70 95       	com	r23
 796:	61 95       	neg	r22
 798:	7f 4f       	sbci	r23, 0xFF	; 255
 79a:	8f 4f       	sbci	r24, 0xFF	; 255
 79c:	9f 4f       	sbci	r25, 0xFF	; 255
 79e:	99 23       	and	r25, r25
 7a0:	a9 f0       	breq	.+42     	; 0x7cc <__floatsisf+0x40>
 7a2:	f9 2f       	mov	r31, r25
 7a4:	96 e9       	ldi	r25, 0x96	; 150
 7a6:	bb 27       	eor	r27, r27
 7a8:	93 95       	inc	r25
 7aa:	f6 95       	lsr	r31
 7ac:	87 95       	ror	r24
 7ae:	77 95       	ror	r23
 7b0:	67 95       	ror	r22
 7b2:	b7 95       	ror	r27
 7b4:	f1 11       	cpse	r31, r1
 7b6:	f8 cf       	rjmp	.-16     	; 0x7a8 <__floatsisf+0x1c>
 7b8:	fa f4       	brpl	.+62     	; 0x7f8 <__floatsisf+0x6c>
 7ba:	bb 0f       	add	r27, r27
 7bc:	11 f4       	brne	.+4      	; 0x7c2 <__floatsisf+0x36>
 7be:	60 ff       	sbrs	r22, 0
 7c0:	1b c0       	rjmp	.+54     	; 0x7f8 <__floatsisf+0x6c>
 7c2:	6f 5f       	subi	r22, 0xFF	; 255
 7c4:	7f 4f       	sbci	r23, 0xFF	; 255
 7c6:	8f 4f       	sbci	r24, 0xFF	; 255
 7c8:	9f 4f       	sbci	r25, 0xFF	; 255
 7ca:	16 c0       	rjmp	.+44     	; 0x7f8 <__floatsisf+0x6c>
 7cc:	88 23       	and	r24, r24
 7ce:	11 f0       	breq	.+4      	; 0x7d4 <__floatsisf+0x48>
 7d0:	96 e9       	ldi	r25, 0x96	; 150
 7d2:	11 c0       	rjmp	.+34     	; 0x7f6 <__floatsisf+0x6a>
 7d4:	77 23       	and	r23, r23
 7d6:	21 f0       	breq	.+8      	; 0x7e0 <__floatsisf+0x54>
 7d8:	9e e8       	ldi	r25, 0x8E	; 142
 7da:	87 2f       	mov	r24, r23
 7dc:	76 2f       	mov	r23, r22
 7de:	05 c0       	rjmp	.+10     	; 0x7ea <__floatsisf+0x5e>
 7e0:	66 23       	and	r22, r22
 7e2:	71 f0       	breq	.+28     	; 0x800 <__floatsisf+0x74>
 7e4:	96 e8       	ldi	r25, 0x86	; 134
 7e6:	86 2f       	mov	r24, r22
 7e8:	70 e0       	ldi	r23, 0x00	; 0
 7ea:	60 e0       	ldi	r22, 0x00	; 0
 7ec:	2a f0       	brmi	.+10     	; 0x7f8 <__floatsisf+0x6c>
 7ee:	9a 95       	dec	r25
 7f0:	66 0f       	add	r22, r22
 7f2:	77 1f       	adc	r23, r23
 7f4:	88 1f       	adc	r24, r24
 7f6:	da f7       	brpl	.-10     	; 0x7ee <__floatsisf+0x62>
 7f8:	88 0f       	add	r24, r24
 7fa:	96 95       	lsr	r25
 7fc:	87 95       	ror	r24
 7fe:	97 f9       	bld	r25, 7
 800:	08 95       	ret

00000802 <__fp_cmp>:
 802:	99 0f       	add	r25, r25
 804:	00 08       	sbc	r0, r0
 806:	55 0f       	add	r21, r21
 808:	aa 0b       	sbc	r26, r26
 80a:	e0 e8       	ldi	r30, 0x80	; 128
 80c:	fe ef       	ldi	r31, 0xFE	; 254
 80e:	16 16       	cp	r1, r22
 810:	17 06       	cpc	r1, r23
 812:	e8 07       	cpc	r30, r24
 814:	f9 07       	cpc	r31, r25
 816:	c0 f0       	brcs	.+48     	; 0x848 <__fp_cmp+0x46>
 818:	12 16       	cp	r1, r18
 81a:	13 06       	cpc	r1, r19
 81c:	e4 07       	cpc	r30, r20
 81e:	f5 07       	cpc	r31, r21
 820:	98 f0       	brcs	.+38     	; 0x848 <__fp_cmp+0x46>
 822:	62 1b       	sub	r22, r18
 824:	73 0b       	sbc	r23, r19
 826:	84 0b       	sbc	r24, r20
 828:	95 0b       	sbc	r25, r21
 82a:	39 f4       	brne	.+14     	; 0x83a <__fp_cmp+0x38>
 82c:	0a 26       	eor	r0, r26
 82e:	61 f0       	breq	.+24     	; 0x848 <__fp_cmp+0x46>
 830:	23 2b       	or	r18, r19
 832:	24 2b       	or	r18, r20
 834:	25 2b       	or	r18, r21
 836:	21 f4       	brne	.+8      	; 0x840 <__fp_cmp+0x3e>
 838:	08 95       	ret
 83a:	0a 26       	eor	r0, r26
 83c:	09 f4       	brne	.+2      	; 0x840 <__fp_cmp+0x3e>
 83e:	a1 40       	sbci	r26, 0x01	; 1
 840:	a6 95       	lsr	r26
 842:	8f ef       	ldi	r24, 0xFF	; 255
 844:	81 1d       	adc	r24, r1
 846:	81 1d       	adc	r24, r1
 848:	08 95       	ret

0000084a <__fp_inf>:
 84a:	97 f9       	bld	r25, 7
 84c:	9f 67       	ori	r25, 0x7F	; 127
 84e:	80 e8       	ldi	r24, 0x80	; 128
 850:	70 e0       	ldi	r23, 0x00	; 0
 852:	60 e0       	ldi	r22, 0x00	; 0
 854:	08 95       	ret

00000856 <__fp_nan>:
 856:	9f ef       	ldi	r25, 0xFF	; 255
 858:	80 ec       	ldi	r24, 0xC0	; 192
 85a:	08 95       	ret

0000085c <__fp_pscA>:
 85c:	00 24       	eor	r0, r0
 85e:	0a 94       	dec	r0
 860:	16 16       	cp	r1, r22
 862:	17 06       	cpc	r1, r23
 864:	18 06       	cpc	r1, r24
 866:	09 06       	cpc	r0, r25
 868:	08 95       	ret

0000086a <__fp_pscB>:
 86a:	00 24       	eor	r0, r0
 86c:	0a 94       	dec	r0
 86e:	12 16       	cp	r1, r18
 870:	13 06       	cpc	r1, r19
 872:	14 06       	cpc	r1, r20
 874:	05 06       	cpc	r0, r21
 876:	08 95       	ret

00000878 <__fp_round>:
 878:	09 2e       	mov	r0, r25
 87a:	03 94       	inc	r0
 87c:	00 0c       	add	r0, r0
 87e:	11 f4       	brne	.+4      	; 0x884 <__fp_round+0xc>
 880:	88 23       	and	r24, r24
 882:	52 f0       	brmi	.+20     	; 0x898 <__fp_round+0x20>
 884:	bb 0f       	add	r27, r27
 886:	40 f4       	brcc	.+16     	; 0x898 <__fp_round+0x20>
 888:	bf 2b       	or	r27, r31
 88a:	11 f4       	brne	.+4      	; 0x890 <__fp_round+0x18>
 88c:	60 ff       	sbrs	r22, 0
 88e:	04 c0       	rjmp	.+8      	; 0x898 <__fp_round+0x20>
 890:	6f 5f       	subi	r22, 0xFF	; 255
 892:	7f 4f       	sbci	r23, 0xFF	; 255
 894:	8f 4f       	sbci	r24, 0xFF	; 255
 896:	9f 4f       	sbci	r25, 0xFF	; 255
 898:	08 95       	ret

0000089a <__fp_split3>:
 89a:	57 fd       	sbrc	r21, 7
 89c:	90 58       	subi	r25, 0x80	; 128
 89e:	44 0f       	add	r20, r20
 8a0:	55 1f       	adc	r21, r21
 8a2:	59 f0       	breq	.+22     	; 0x8ba <__fp_splitA+0x10>
 8a4:	5f 3f       	cpi	r21, 0xFF	; 255
 8a6:	71 f0       	breq	.+28     	; 0x8c4 <__fp_splitA+0x1a>
 8a8:	47 95       	ror	r20

000008aa <__fp_splitA>:
 8aa:	88 0f       	add	r24, r24
 8ac:	97 fb       	bst	r25, 7
 8ae:	99 1f       	adc	r25, r25
 8b0:	61 f0       	breq	.+24     	; 0x8ca <__fp_splitA+0x20>
 8b2:	9f 3f       	cpi	r25, 0xFF	; 255
 8b4:	79 f0       	breq	.+30     	; 0x8d4 <__fp_splitA+0x2a>
 8b6:	87 95       	ror	r24
 8b8:	08 95       	ret
 8ba:	12 16       	cp	r1, r18
 8bc:	13 06       	cpc	r1, r19
 8be:	14 06       	cpc	r1, r20
 8c0:	55 1f       	adc	r21, r21
 8c2:	f2 cf       	rjmp	.-28     	; 0x8a8 <__fp_split3+0xe>
 8c4:	46 95       	lsr	r20
 8c6:	f1 df       	rcall	.-30     	; 0x8aa <__fp_splitA>
 8c8:	08 c0       	rjmp	.+16     	; 0x8da <__fp_splitA+0x30>
 8ca:	16 16       	cp	r1, r22
 8cc:	17 06       	cpc	r1, r23
 8ce:	18 06       	cpc	r1, r24
 8d0:	99 1f       	adc	r25, r25
 8d2:	f1 cf       	rjmp	.-30     	; 0x8b6 <__fp_splitA+0xc>
 8d4:	86 95       	lsr	r24
 8d6:	71 05       	cpc	r23, r1
 8d8:	61 05       	cpc	r22, r1
 8da:	08 94       	sec
 8dc:	08 95       	ret

000008de <__fp_zero>:
 8de:	e8 94       	clt

000008e0 <__fp_szero>:
 8e0:	bb 27       	eor	r27, r27
 8e2:	66 27       	eor	r22, r22
 8e4:	77 27       	eor	r23, r23
 8e6:	cb 01       	movw	r24, r22
 8e8:	97 f9       	bld	r25, 7
 8ea:	08 95       	ret

000008ec <__mulsf3>:
 8ec:	0e 94 89 04 	call	0x912	; 0x912 <__mulsf3x>
 8f0:	0c 94 3c 04 	jmp	0x878	; 0x878 <__fp_round>
 8f4:	0e 94 2e 04 	call	0x85c	; 0x85c <__fp_pscA>
 8f8:	38 f0       	brcs	.+14     	; 0x908 <__mulsf3+0x1c>
 8fa:	0e 94 35 04 	call	0x86a	; 0x86a <__fp_pscB>
 8fe:	20 f0       	brcs	.+8      	; 0x908 <__mulsf3+0x1c>
 900:	95 23       	and	r25, r21
 902:	11 f0       	breq	.+4      	; 0x908 <__mulsf3+0x1c>
 904:	0c 94 25 04 	jmp	0x84a	; 0x84a <__fp_inf>
 908:	0c 94 2b 04 	jmp	0x856	; 0x856 <__fp_nan>
 90c:	11 24       	eor	r1, r1
 90e:	0c 94 70 04 	jmp	0x8e0	; 0x8e0 <__fp_szero>

00000912 <__mulsf3x>:
 912:	0e 94 4d 04 	call	0x89a	; 0x89a <__fp_split3>
 916:	70 f3       	brcs	.-36     	; 0x8f4 <__mulsf3+0x8>

00000918 <__mulsf3_pse>:
 918:	95 9f       	mul	r25, r21
 91a:	c1 f3       	breq	.-16     	; 0x90c <__mulsf3+0x20>
 91c:	95 0f       	add	r25, r21
 91e:	50 e0       	ldi	r21, 0x00	; 0
 920:	55 1f       	adc	r21, r21
 922:	62 9f       	mul	r22, r18
 924:	f0 01       	movw	r30, r0
 926:	72 9f       	mul	r23, r18
 928:	bb 27       	eor	r27, r27
 92a:	f0 0d       	add	r31, r0
 92c:	b1 1d       	adc	r27, r1
 92e:	63 9f       	mul	r22, r19
 930:	aa 27       	eor	r26, r26
 932:	f0 0d       	add	r31, r0
 934:	b1 1d       	adc	r27, r1
 936:	aa 1f       	adc	r26, r26
 938:	64 9f       	mul	r22, r20
 93a:	66 27       	eor	r22, r22
 93c:	b0 0d       	add	r27, r0
 93e:	a1 1d       	adc	r26, r1
 940:	66 1f       	adc	r22, r22
 942:	82 9f       	mul	r24, r18
 944:	22 27       	eor	r18, r18
 946:	b0 0d       	add	r27, r0
 948:	a1 1d       	adc	r26, r1
 94a:	62 1f       	adc	r22, r18
 94c:	73 9f       	mul	r23, r19
 94e:	b0 0d       	add	r27, r0
 950:	a1 1d       	adc	r26, r1
 952:	62 1f       	adc	r22, r18
 954:	83 9f       	mul	r24, r19
 956:	a0 0d       	add	r26, r0
 958:	61 1d       	adc	r22, r1
 95a:	22 1f       	adc	r18, r18
 95c:	74 9f       	mul	r23, r20
 95e:	33 27       	eor	r19, r19
 960:	a0 0d       	add	r26, r0
 962:	61 1d       	adc	r22, r1
 964:	23 1f       	adc	r18, r19
 966:	84 9f       	mul	r24, r20
 968:	60 0d       	add	r22, r0
 96a:	21 1d       	adc	r18, r1
 96c:	82 2f       	mov	r24, r18
 96e:	76 2f       	mov	r23, r22
 970:	6a 2f       	mov	r22, r26
 972:	11 24       	eor	r1, r1
 974:	9f 57       	subi	r25, 0x7F	; 127
 976:	50 40       	sbci	r21, 0x00	; 0
 978:	9a f0       	brmi	.+38     	; 0x9a0 <__mulsf3_pse+0x88>
 97a:	f1 f0       	breq	.+60     	; 0x9b8 <__mulsf3_pse+0xa0>
 97c:	88 23       	and	r24, r24
 97e:	4a f0       	brmi	.+18     	; 0x992 <__mulsf3_pse+0x7a>
 980:	ee 0f       	add	r30, r30
 982:	ff 1f       	adc	r31, r31
 984:	bb 1f       	adc	r27, r27
 986:	66 1f       	adc	r22, r22
 988:	77 1f       	adc	r23, r23
 98a:	88 1f       	adc	r24, r24
 98c:	91 50       	subi	r25, 0x01	; 1
 98e:	50 40       	sbci	r21, 0x00	; 0
 990:	a9 f7       	brne	.-22     	; 0x97c <__mulsf3_pse+0x64>
 992:	9e 3f       	cpi	r25, 0xFE	; 254
 994:	51 05       	cpc	r21, r1
 996:	80 f0       	brcs	.+32     	; 0x9b8 <__mulsf3_pse+0xa0>
 998:	0c 94 25 04 	jmp	0x84a	; 0x84a <__fp_inf>
 99c:	0c 94 70 04 	jmp	0x8e0	; 0x8e0 <__fp_szero>
 9a0:	5f 3f       	cpi	r21, 0xFF	; 255
 9a2:	e4 f3       	brlt	.-8      	; 0x99c <__mulsf3_pse+0x84>
 9a4:	98 3e       	cpi	r25, 0xE8	; 232
 9a6:	d4 f3       	brlt	.-12     	; 0x99c <__mulsf3_pse+0x84>
 9a8:	86 95       	lsr	r24
 9aa:	77 95       	ror	r23
 9ac:	67 95       	ror	r22
 9ae:	b7 95       	ror	r27
 9b0:	f7 95       	ror	r31
 9b2:	e7 95       	ror	r30
 9b4:	9f 5f       	subi	r25, 0xFF	; 255
 9b6:	c1 f7       	brne	.-16     	; 0x9a8 <__mulsf3_pse+0x90>
 9b8:	fe 2b       	or	r31, r30
 9ba:	88 0f       	add	r24, r24
 9bc:	91 1d       	adc	r25, r1
 9be:	96 95       	lsr	r25
 9c0:	87 95       	ror	r24
 9c2:	97 f9       	bld	r25, 7
 9c4:	08 95       	ret

000009c6 <__udivmodsi4>:
 9c6:	a1 e2       	ldi	r26, 0x21	; 33
 9c8:	1a 2e       	mov	r1, r26
 9ca:	aa 1b       	sub	r26, r26
 9cc:	bb 1b       	sub	r27, r27
 9ce:	fd 01       	movw	r30, r26
 9d0:	0d c0       	rjmp	.+26     	; 0x9ec <__udivmodsi4_ep>

000009d2 <__udivmodsi4_loop>:
 9d2:	aa 1f       	adc	r26, r26
 9d4:	bb 1f       	adc	r27, r27
 9d6:	ee 1f       	adc	r30, r30
 9d8:	ff 1f       	adc	r31, r31
 9da:	a2 17       	cp	r26, r18
 9dc:	b3 07       	cpc	r27, r19
 9de:	e4 07       	cpc	r30, r20
 9e0:	f5 07       	cpc	r31, r21
 9e2:	20 f0       	brcs	.+8      	; 0x9ec <__udivmodsi4_ep>
 9e4:	a2 1b       	sub	r26, r18
 9e6:	b3 0b       	sbc	r27, r19
 9e8:	e4 0b       	sbc	r30, r20
 9ea:	f5 0b       	sbc	r31, r21

000009ec <__udivmodsi4_ep>:
 9ec:	66 1f       	adc	r22, r22
 9ee:	77 1f       	adc	r23, r23
 9f0:	88 1f       	adc	r24, r24
 9f2:	99 1f       	adc	r25, r25
 9f4:	1a 94       	dec	r1
 9f6:	69 f7       	brne	.-38     	; 0x9d2 <__udivmodsi4_loop>
 9f8:	60 95       	com	r22
 9fa:	70 95       	com	r23
 9fc:	80 95       	com	r24
 9fe:	90 95       	com	r25
 a00:	9b 01       	movw	r18, r22
 a02:	ac 01       	movw	r20, r24
 a04:	bd 01       	movw	r22, r26
 a06:	cf 01       	movw	r24, r30
 a08:	08 95       	ret

00000a0a <_exit>:
 a0a:	f8 94       	cli

00000a0c <__stop_program>:
 a0c:	ff cf       	rjmp	.-2      	; 0xa0c <__stop_program>
